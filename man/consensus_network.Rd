% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus_network.R
\name{consensus_network}
\alias{consensus_network}
\title{Graph based consensus algorithm for majority voting.
\code{consensus_network} assigns each point in a lidR cloud to a treeID based on multiple segmentation algorithms}
\usage{
consensus_network(ptlist, threshold = 0.5)
}
\arguments{
\item{ptlist}{A list of lidar clouds read in by lidR package, processed using \code{\link[lidR]{lastrees}}}

\item{threshold}{numeric. The proportion [0-1] of methods which need to predicted a pair of points to be included in the same cluster. Default is 0.5, which is a majority rule. A cluster voting scheme. Currently implemented "majority" or "kmodes" see \code{\link[diceR]{majority_voting}}  processed using \code{\link[lidR]{lastrees}}}
}
\value{
A las object with treeID field updated based on ensemble individual tree segmentation. A new column "consensus" is the consensus treeID.
}
\description{
Graph based consensus algorithm for majority voting.
\code{consensus_network} assigns each point in a lidR cloud to a treeID based on multiple segmentation algorithms
}
\examples{
LASfile <- system.file("extdata", "MixedConifer.laz", package="lidR")
tile = readLAS(LASfile, select = "xyz", filter = "-drop_z_below 0"
chm=canopy_model(tile)
ptlist<-list()
ptlist[["watershed"]] <- segment_trees(tile,algorithm="watershed",chm=chm)
ptlist[["silva2016"]]<- segment_trees(tile,algorithm="silva2016",chm=chm)
consensus_network(ptlist)
}
